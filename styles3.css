@import url(//fonts.googleapis.com/css?family=Lato:300:400);

body {
  margin:0;
  overflow-x: hidden;
  /*
  background: rgb(70, 69, 69);
  */
  background-color: #000000;
  background-image: url("./img/starrysky.png");
  background-repeat: repeat;
}

h1 {
  font-family: 'Lato', sans-serif;
  font-weight:300;
  letter-spacing: 2px;
  font-size:48px;
}
h2 {
  font-family: 'Lato', sans-serif;
  font-weight:300;
  letter-spacing: 2px;
}
p {
  font-family: 'Lato', sans-serif;
  letter-spacing: 1px;
  font-size:14px;
  color: #333333;
  text-shadow: -1px -1px 0 #fff, 1px -1px 0 #000, -1px 1px 0 #fff, 1px 1px 0 #000;
  width: 75%;
  justify-content: center;
  align-items: center;
  text-align: center;
  display: inline-block;
  vertical-align: middle;
}

.row {
  justify-content: center;
  align-items: center;
  text-align: center;
  display: inline-block;
  vertical-align: middle;
  width:100%;
}

.header {
  position:relative;
  text-align:center;
  background: linear-gradient(60deg, rgba(84,58,183,1) 0%, rgba(0,172,193,1) 100%);
  color:white;
}
.logo {
  width:50px;
  fill:white;
  padding-right:15px;
  display:inline-block;
  vertical-align: middle;
}

.inner-header {
  height:65vh;
  width:100%;
  margin: 0;
  padding: 0;
}

.flex { /*Flexbox for containers*/
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.waves {
  position:relative;
  width: 100%;
  height:15vh;
  margin-bottom:-7px; /*Fix for safari gap*/
  min-height:100px;
  max-height:150px;
}

.content {
  position:relative;
  height:20vh;
  text-align:center;
  background-color: white;
}

#menu li a.special-popped-button, .special-popped-button {
	background-color:#74ad5a;
	-moz-box-shadow:inset 0px 1px 0px 0px #9acc85;
	-webkit-box-shadow:inset 0px 1px 0px 0px #9acc85;
	box-shadow:inset 0px 1px 0px 0px #83aac9;
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #74ad5a), color-stop(1, #68a54b));
	background:-moz-linear-gradient(top, #74ad5a 5%, #68a54b 100%);
	background:-webkit-linear-gradient(top, #74ad5a 5%, #68a54b 100%);
	background:-o-linear-gradient(top, #74ad5a 5%, #68a54b 100%);
	background:-ms-linear-gradient(top, #74ad5a 5%, #68a54b 100%);
	background:linear-gradient(to bottom, #5886a9 5%, #497ba0 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#74ad5a', endColorstr='#68a54b',GradientType=0);
	-moz-border-radius:4px;
	-webkit-border-radius:4px;
	border-radius:4px;
	border:1px solid #214b6a;
	display:inline-block;
	cursor:pointer;
	color:#ffffff;
	font-family:Arial;
	font-size:13px;
	font-weight:bold;
	padding:6px 12px;
	text-decoration:none;
}
#menu li a.special-popped-button:hover, .special-popped-button:hover {
	background-color:#68a54b;
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #68a54b), color-stop(1, #74ad5a));
	background:-moz-linear-gradient(top, #68a54b 5%, #74ad5a 100%);
	background:-webkit-linear-gradient(top, #68a54b 5%, #74ad5a 100%);
	background:-o-linear-gradient(top, #68a54b 5%, #74ad5a 100%);
	background:-ms-linear-gradient(top, #68a54b 5%, #74ad5a 100%);
	background:linear-gradient(to bottom, #497ba0 5%, #5886a9 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#68a54b', endColorstr='#74ad5a',GradientType=0);
}
#menu li a.special-popped-button:active, .special-popped-button:active {
	position:relative;
	top:1px;
}

/* Animation */

.parallax > use {
  animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;
}
.parallax > use:nth-child(1) {
  animation-delay: -2s;
  animation-duration: 7s;
}
.parallax > use:nth-child(2) {
  animation-delay: -3s;
  animation-duration: 10s;
}
.parallax > use:nth-child(3) {
  animation-delay: -4s;
  animation-duration: 13s;
}
.parallax > use:nth-child(4) {
  animation-delay: -5s;
  animation-duration: 20s;
}
@keyframes move-forever {
  0% {
   transform: translate3d(-90px,0,0);
  }
  100% {
    transform: translate3d(85px,0,0);
  }
}
/*Shrinking for mobile*/
@media (max-width: 768px) {
  .waves {
    height:40px;
    min-height:40px;
  }
  .content {
    height:30vh;
  }
  h1 {
    font-size:24px;
  }
}



@import url('https://fonts.googleapis.com/css?family=Montserrat:100');
.glitch {
  font-family: 'Montserrat', sans-serif;
}
#app {
  background: #0a0a0a;
  /*
  height: 100vh;
  width: 100%;
  */
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /*
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url('https://images.unsplash.com/photo-1506399558188-acca6f8cbf41?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ&s=7118759521e3184778a3b5e010e202c6');
  */
  background-size: cover;
  background-position: center;
  z-index: 1;
}
#wrapper {
  text-align: center;
}
.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}
/* Our mixin positions a copy of our text
 directly on our existing text, while
 also setting content to the appropriate
 text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  /* Animation provies a slight random skew. Check bottom of doc
   for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
   a typical top,right,bottom,left fashion and creates a mask
   to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
   with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}
/* Creates an animation with 20 steaps. For each step, it calculates
 a percentage for the specific step. It then generates a random clip
 box to be used for the random glitch effect. Also adds a very subtle
 skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(83px, 9999px, 63px, 0);
    transform: skew(0.93deg);
  }
  5% {
    clip: rect(23px, 9999px, 93px, 0);
    transform: skew(0.35deg);
  }
  10% {
    clip: rect(51px, 9999px, 64px, 0);
    transform: skew(0.29deg);
  }
  15% {
    clip: rect(63px, 9999px, 97px, 0);
    transform: skew(0.06deg);
  }
  20% {
    clip: rect(10px, 9999px, 47px, 0);
    transform: skew(0.7deg);
  }
  25% {
    clip: rect(70px, 9999px, 81px, 0);
    transform: skew(0.15deg);
  }
  30% {
    clip: rect(42px, 9999px, 21px, 0);
    transform: skew(0.98deg);
  }
  35% {
    clip: rect(39px, 9999px, 85px, 0);
    transform: skew(0.01deg);
  }
  40% {
    clip: rect(47px, 9999px, 56px, 0);
    transform: skew(0.58deg);
  }
  45% {
    clip: rect(5px, 9999px, 70px, 0);
    transform: skew(0.13deg);
  }
  50% {
    clip: rect(20px, 9999px, 61px, 0);
    transform: skew(0.59deg);
  }
  55% {
    clip: rect(64px, 9999px, 93px, 0);
    transform: skew(0.57deg);
  }
  60% {
    clip: rect(97px, 9999px, 98px, 0);
    transform: skew(0.02deg);
  }
  65% {
    clip: rect(92px, 9999px, 80px, 0);
    transform: skew(0.07deg);
  }
  70% {
    clip: rect(84px, 9999px, 59px, 0);
    transform: skew(0.31deg);
  }
  75% {
    clip: rect(17px, 9999px, 9px, 0);
    transform: skew(0.67deg);
  }
  80% {
    clip: rect(70px, 9999px, 35px, 0);
    transform: skew(0.81deg);
  }
  85% {
    clip: rect(34px, 9999px, 23px, 0);
    transform: skew(0.25deg);
  }
  90% {
    clip: rect(77px, 9999px, 1px, 0);
    transform: skew(0.32deg);
  }
  95% {
    clip: rect(19px, 9999px, 85px, 0);
    transform: skew(0.94deg);
  }
  100% {
    clip: rect(4px, 9999px, 9px, 0);
    transform: skew(1deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(13px, 9999px, 43px, 0);
    transform: skew(0.43deg);
  }
  5% {
    clip: rect(2px, 9999px, 78px, 0);
    transform: skew(0.5deg);
  }
  10% {
    clip: rect(52px, 9999px, 62px, 0);
    transform: skew(0.71deg);
  }
  15% {
    clip: rect(34px, 9999px, 96px, 0);
    transform: skew(0.76deg);
  }
  20% {
    clip: rect(27px, 9999px, 34px, 0);
    transform: skew(0.45deg);
  }
  25% {
    clip: rect(89px, 9999px, 20px, 0);
    transform: skew(0.95deg);
  }
  30% {
    clip: rect(84px, 9999px, 78px, 0);
    transform: skew(0.87deg);
  }
  35% {
    clip: rect(46px, 9999px, 93px, 0);
    transform: skew(0.91deg);
  }
  40% {
    clip: rect(24px, 9999px, 49px, 0);
    transform: skew(0.65deg);
  }
  45% {
    clip: rect(27px, 9999px, 90px, 0);
    transform: skew(0.82deg);
  }
  50% {
    clip: rect(48px, 9999px, 30px, 0);
    transform: skew(0.34deg);
  }
  55% {
    clip: rect(91px, 9999px, 50px, 0);
    transform: skew(0.39deg);
  }
  60% {
    clip: rect(72px, 9999px, 88px, 0);
    transform: skew(0.97deg);
  }
  65% {
    clip: rect(94px, 9999px, 29px, 0);
    transform: skew(0.2deg);
  }
  70% {
    clip: rect(87px, 9999px, 20px, 0);
    transform: skew(0.21deg);
  }
  75% {
    clip: rect(54px, 9999px, 31px, 0);
    transform: skew(0.34deg);
  }
  80% {
    clip: rect(44px, 9999px, 74px, 0);
    transform: skew(0.89deg);
  }
  85% {
    clip: rect(50px, 9999px, 59px, 0);
    transform: skew(0.64deg);
  }
  90% {
    clip: rect(19px, 9999px, 82px, 0);
    transform: skew(0.32deg);
  }
  95% {
    clip: rect(66px, 9999px, 78px, 0);
    transform: skew(0.01deg);
  }
  100% {
    clip: rect(56px, 9999px, 71px, 0);
    transform: skew(0.11deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(1deg);
  }
  10% {
    transform: skew(5deg);
  }
  20% {
    transform: skew(4deg);
  }
  30% {
    transform: skew(2deg);
  }
  40% {
    transform: skew(-3deg);
  }
  50% {
    transform: skew(-4deg);
  }
  60% {
    transform: skew(3deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(4deg);
  }
  90% {
    transform: skew(-1deg);
  }
  100% {
    transform: skew(-1deg);
  }
}



 .night {
 }
 .stars {
   background: #fff;

   animation: stars 1.7s ease-in-out infinite;
 }
 @keyframes stars {
   0%,
   40%,
   100% {
     transform: scale(0.2);
   }
   20% {
     transform: scale(1);
   }
 }

 .star:nth-child(1) {
   animation-delay: -1.2s;
   background: yellow;
   box-shadow: 0 0 50px yellow;
 }
 .star:nth-child(2) {
   animation-delay: -1s;
   background: rgb(99, 247, 136);
   box-shadow: 0 0 50px rgb(99, 247, 136);
 }
 .star:nth-child(3) {
   animation-delay: -0.8s;
   background: rgb(30, 243, 225);
   box-shadow: 0 0 50px  rgb(30, 243, 225);
 }
 .star:nth-child(4) {
   animation-delay: -0.6s;
   background: rgb(241, 58, 58);
   box-shadow: 0 0 50px rgb(241, 58, 58);
 }
 .star:nth-child(5) {
   animation-delay: -0.4s;
   background: rgb(247, 61, 176);
   box-shadow: 0 0 50px  rgb(247, 61, 176);
 }
 .star:nth-child(6) {
   animation-delay: -1.2s;
   background: yellow;
   box-shadow: 0 0 50px yellow;
 }
 .star:nth-child(7) {
   animation-delay: -1s;
   background: rgb(99, 247, 136);
   box-shadow: 0 0 50px rgb(99, 247, 136);
 }
 .star:nth-child(8) {
   animation-delay: -0.8s;
   background: rgb(30, 243, 225);
   box-shadow: 0 0 50px  rgb(30, 243, 225);
 }
 .star:nth-child(9) {
   animation-delay: -0.6s;
   background: rgb(241, 58, 58);
   box-shadow: 0 0 50px rgb(241, 58, 58);
 }
 .star:nth-child(10) {
   animation-delay: -0.4s;
   background: rgb(247, 61, 176);
   box-shadow: 0 0 50px  rgb(247, 61, 176);
 }
 .star:nth-child(11) {
   animation-delay: -1.2s;
   background: yellow;
   box-shadow: 0 0 50px yellow;
 }
 .star:nth-child(12) {
   animation-delay: -1s;
   background: rgb(99, 247, 136);
   box-shadow: 0 0 50px rgb(99, 247, 136);
 }
 .star:nth-child(13) {
   animation-delay: -0.8s;
   background: rgb(30, 243, 225);
   box-shadow: 0 0 50px  rgb(30, 243, 225);
 }
 .star:nth-child(14) {
   animation-delay: -0.6s;
   background: rgb(241, 58, 58);
   box-shadow: 0 0 50px rgb(241, 58, 58);
 }
 .star:nth-child(15) {
   animation-delay: -0.4s;
   background: rgb(247, 61, 176);
   box-shadow: 0 0 50px  rgb(247, 61, 176);
 }

 /*
 body {
   background: rgb(70, 69, 69);
 }
 ul {
   position: absolute;
   top: 50%;
   left: 50%;
   display: flex;
 }
 ul li {
   list-style: none;
   width: 40px;
   height: 40px;
   background: #fff;
   border-radius: 50%;

   animation: animate 1.7s ease-in-out infinite;
 }
 @keyframes animate {
   0%,
   40%,
   100% {
     transform: scale(0.2);
   }
   20% {
     transform: scale(1);
   }
 }

 ul li:nth-child(1) {
   animation-delay: -1.2s;
   background: yellow;
   box-shadow: 0 0 50px yellow;
 }
 ul li:nth-child(2) {
   animation-delay: -1s;
   background: rgb(99, 247, 136);
   box-shadow: 0 0 50px rgb(99, 247, 136);
 }
 ul li:nth-child(3) {
   animation-delay: -0.8s;
   background: rgb(30, 243, 225);
   box-shadow: 0 0 50px  rgb(30, 243, 225);
 }
 ul li:nth-child(4) {
   animation-delay: -0.6s;
   background: rgb(241, 58, 58);
   box-shadow: 0 0 50px rgb(241, 58, 58);
 }
 ul li:nth-child(5) {
   animation-delay: -0.4s;
   background: rgb(247, 61, 176);
   box-shadow: 0 0 50px  rgb(247, 61, 176);
 }
 */

 ul {
   display: flex;
   align-items: center;
    width: 20%;
    margin: auto;
 }
 ul li {
   list-style: none;
   width: 40px;
   height: 40px;
   background: #fff;
   border-radius: 50%;

   animation: animate 1.7s ease-in-out infinite;
 }
 @keyframes animate {
   0%,
   40%,
   100% {
     transform: scale(0.2);
   }
   20% {
     transform: scale(1);
   }
 }

 ul li:nth-child(1) {
   animation-delay: -1.2s;
   background: yellow;
   box-shadow: 0 0 50px yellow;
 }
 ul li:nth-child(2) {
   animation-delay: -1s;
   background: rgb(99, 247, 136);
   box-shadow: 0 0 50px rgb(99, 247, 136);
 }
 ul li:nth-child(3) {
   animation-delay: -0.8s;
   background: rgb(30, 243, 225);
   box-shadow: 0 0 50px  rgb(30, 243, 225);
 }
 ul li:nth-child(4) {
   animation-delay: -0.6s;
   background: rgb(241, 58, 58);
   box-shadow: 0 0 50px rgb(241, 58, 58);
 }
 ul li:nth-child(5) {
   animation-delay: -0.4s;
   background: rgb(247, 61, 176);
   box-shadow: 0 0 50px  rgb(247, 61, 176);
 }

/*
Glowing Star Effect
Source: https://www.geeksforgeeks.org/how-to-create-glowing-star-effect-using-html-and-css/
*/

/*
Copyright (c) 2021 by Goodkatz (https://codepen.io/goodkatz/pen/LYPGxQz)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

/*
Copyright (c) 2021 by David Miranda (https://codepen.io/panphora/pen/OmGLwy)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

/*
Copyright (c) 2021 by Isaac Doud (https://codepen.io/cipherbeta/pen/YLdVjw)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
